/* You can add global styles to this file, and also import other style files */
/* for sidenav to take a whole page */
html,
body {
  margin: 0;
  height: 100%;
}

body {
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

.flex-container {
  display: flex;
  flex-direction: column;
}

@media only screen and (max-width: 1024px) {
  .flex-container {
    padding: 1% 2%;
  }
}
@media only screen and (min-width: 1024px) {
  .flex-container {
    padding: 1% 5%;
  }
}
@media only screen and (min-width: 1440px) {
  .flex-container {
    padding: 1% 12%;
  }
}

.flex-container-row {
  display: flex;
  flex-wrap: nowrap;
  padding: 1% 15%;
}

.flex-container-row > div {
  background-color: #f1f1f1;
  margin: 10px;
  text-align: center;
  font-size: 18px;
}

.active-link {
  color: white !important;
  background-color: navy;
}

.baas-packages-mat-drawer-outer > div {
  overflow: hidden !important;
}
/*
 * Unfortunately, there is no way to customize a mat-dialog-container
 * class without touching the global styles.scss file.
 * This SCSS rule uses the ability to customize the class name of a MatDialog's
 * panel element (which is a parent element to mat-dialog-container) in order to
 * select and override details for this specific type of element.
 */
.baas-request-details-dialog-container {
  // TODO One day we should find a way to move these styles to a component-level
  max-height: 90vh;
  max-width: 100vw;
  .mat-dialog-container {
    padding: 0;
    resize: both;

    // The CSS min/max functions are supported by nearly all browsers, but just
    // in case the user-agent does not support that functionality, first define
    // a simple value and then ask the browser to interpret `min(...)`. This
    // will ensure that a reasonable value is used as a fallback.
    height: 700px;
    width: 800px;
    height: min(700px, 88vh);
    width: max(800px, 50vw);

    min-height: 10vh;
    min-width: 36.5vw;
    max-height: 90vh;
    max-width: 100%;

    // TODO: We should consider converting these scrollbar styles into a Mixin
    scrollbar-width: thin;
    scrollbar-color: #90a4ae #cfd8dc;
    &::-webkit-scrollbar {
      width: 0.8em;
      height: 0.5em;
    }

    &::-webkit-scrollbar-thumb {
      background-color: rgba(gray, 0.1);
      border-radius: 3px;
      &:hover {
        background: rgba(255, 255, 255, 0.2);
      }
    }
  }
}
